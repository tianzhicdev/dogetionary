# SSL configuration for Cloudflare certificates
# Place your Cloudflare certificate and private key in nginx/ssl/

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name unforgettable-dictionary.com www.unforgettable-dictionary.com;

    # Cloudflare SSL Certificate Configuration
    ssl_certificate /etc/nginx/ssl/cloudflare.pem;
    ssl_certificate_key /etc/nginx/ssl/cloudflare.key;

    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    root /usr/share/nginx/html;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Cache static assets
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }

    # Cache HTML files for a shorter period
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public";
        add_header Vary Accept-Encoding;
    }

    # Main location block
    location / {
        try_files $uri $uri/ $uri.html @fallback;

        # Add trailing slash for directories
        if (-d $request_filename) {
            rewrite [^/]$ $scheme://$http_host$uri/ permanent;
        }
    }

    # Fallback for clean URLs
    location @fallback {
        # Try to serve request as file, then as directory
        # If not found, serve 404
        return 404;
    }

    # SEO-friendly redirects
    location ~ ^/word/(.+)$ {
        return 301 $scheme://$http_host/words/${1:0:1}/$1.html;
    }

    location ~ ^/letter/(.+)$ {
        return 301 $scheme://$http_host/letters/$1.html;
    }

    # Robots.txt
    location = /robots.txt {
        add_header Content-Type text/plain;
    }

    # Sitemap
    location ~ ^/sitemap.*\.xml$ {
        add_header Content-Type application/xml;
    }

    # Block access to sensitive files
    location ~ /\.(ht|git|env) {
        deny all;
        return 404;
    }

    # Block access to log files
    location ~ \.log$ {
        deny all;
        return 404;
    }

    # Custom 404 page
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    # Custom 50x page
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }

    # Security: prevent access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Performance: prevent logging of favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # Prevent access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name unforgettable-dictionary.com www.unforgettable-dictionary.com;
    return 301 https://$server_name$request_uri;
}