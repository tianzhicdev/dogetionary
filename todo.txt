# Dogetionary Development TODO List
# This file contains tasks to be executed by exec_todo.sh with Claude Code
#
# Format:
# [TASKS] - List numbered tasks
# [TESTING] - List testing criteria/commands
#
# Usage: ./exec_todo.sh [task_number]
# Example: ./exec_todo.sh 1    # Execute only task 1
# Example: ./exec_todo.sh      # Execute all tasks

[TASKS]
1. reorg app_refactored.py: move functions out to other files;
2. categorize endpoints to diff categories: ios, web, admin, test and etc
3. when the dockers are running. the logs should be visible from outside, make a ./logs dir and keep the logs there, set max size to be 1gb for each container; add the logs to .gitignore


[TESTING]
# COMPREHENSIVE TESTING WORKFLOW
# The exec_todo.sh script now implements comprehensive testing automatically:
#
# 1. For each task attempt:
#    - Backend health check (curl -f http://localhost:5000/health)
#    - Database connection test (docker exec dogetionary-postgres-1 psql -U dogeuser -d dogetionary -c "SELECT 1;")
#    - Integration tests (python src/tests/test_integration_comprehensive.py)
#    - iOS compilation (xcodebuild -project dogetionary.xcodeproj -scheme dogetionary -destination 'platform=iOS Simulator,name=iPhone 16' build)
#    - Docker services status check (docker-compose ps)
#
# 2. Iterative Claude Code evaluation:
#    - Up to 3 attempts per task
#    - Claude Code reviews test results after each attempt
#    - Provides failure context for retry attempts
#    - Final success confirmation required
#
# 3. Final validation:
#    - Comprehensive system health check after all tasks
#    - Claude Code final assessment of project state
#
# 4. Enhanced logging:
#    - Separate logs for execution and testing
#    - Detailed test result summaries
#    - Failure analysis and recommendations
#
# USAGE:
# ./exec_todo.sh           # Execute all tasks with comprehensive testing
# ./exec_todo.sh 1         # Execute only task 1 with comprehensive testing
# ./exec_todo.sh --help    # Show usage information
#
# LOGS LOCATION: ./todo_logs/
# - task_N_TIMESTAMP.log       (execution logs)
# - task_N_tests_TIMESTAMP.log (test results)
# - final_validation_TIMESTAMP.log (final assessment)