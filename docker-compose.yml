version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: dogetionary
      POSTGRES_USER: dogeuser
      POSTGRES_PASSWORD: dogepass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dogeuser -d dogetionary"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dogetionary-network

  app:
    build: ./src
    environment:
      - DATABASE_URL=postgresql://dogeuser:dogepass@postgres:5432/dogetionary
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dogetionary-network
    expose:
      - "5000"
    ports:
      - "5000:5000"

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    volumes:
      - /etc/letsencrypt/live/dogetionary.webhop.net/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
      - /etc/letsencrypt/live/dogetionary.webhop.net/privkey.pem:/etc/nginx/ssl/privkey.pem:ro
      - ./nginx/index.html:/usr/share/nginx/html/index.html:ro
    networks:
      - dogetionary-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  dogetionary-network:
    driver: bridge